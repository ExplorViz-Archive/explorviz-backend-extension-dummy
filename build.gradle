plugins {
    id 'java'
    id 'application'
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply from: 'https://raw.githubusercontent.com/ExplorViz/gradle-script-plugins/master/microservice.gradle'

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}


configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {

	// ExplorViz provides a project that contains shared source code classes for 
	// different concerns. See:
	// https://github.com/ExplorViz/explorviz-backend-shared

  	// ExplorViz config injection
  	implementation 'com.github.explorviz.explorviz-backend-shared:config-injection:master-SNAPSHOT'
  	
  	// ExplorViz common exception handling
  	implementation 'com.github.explorviz.explorviz-backend-shared:exception-handling:master-SNAPSHOT'
  	
  	implementation 'com.github.explorviz.explorviz-backend-shared:common-concerns:master-SNAPSHOT'
  	
  	implementation 'com.github.explorviz.explorviz-backend-shared:security:master-SNAPSHOT'
  	
  	// Local linking of external project dependency instead of Jitpack
  	//implementation project(':common-concerns')
  	
  	// ExplorViz landscape model
  	//implementation 'com.github.explorviz.explorviz-backend-shared:landscape-model:master-SNAPSHOT'
	
  	// ExplorViz security filters
  	//implementation 'com.github.explorviz.explorviz-backend-shared:security:master-SNAPSHOT'
	
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// Disable standard Jar build and
// use fat-Jar instead with all dependencies
assemble.dependsOn shadowJar
jar.enabled = false

// Define the main class for the gradle jar task
jar {
  manifest {
    attributes(
      'Main-Class': 'net.explorviz.extension.dummy.main.Main'
    )
  }
}

// Define the main class for the gradle application tasks
application {
    mainClassName = 'net.explorviz.extension.dummy.main.Main'
}

shadowJar {
  archiveName = "${project.name}.${extension}"
}