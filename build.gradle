apply plugin: 'java-library'
apply from: 'https://raw.githubusercontent.com/ExplorViz/gradle-script-plugins/master/microservice.gradle'

repositories {
	jcenter()
	maven { url 'https://jitpack.io' }
}


// # Uncomment lines below to force dependency downloading (e.g. when explorviz-backend was updated)
configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
	// ExplorViz landscape model
  	implementation 'com.github.explorviz.explorviz-backend-shared:landscape-model:master-SNAPSHOT'
  	
  	// ExplorViz config injection
  	implementation 'com.github.explorviz.explorviz-backend-shared:config-injection:master-SNAPSHOT'

	// ExplorViz security filters
  	implementation 'com.github.explorviz.explorviz-backend-shared:security:master-SNAPSHOT'
  	
  	// ExplorViz common exception handling
  	implementation 'com.github.explorviz.explorviz-backend-shared:exception-handling:master-SNAPSHOT'
    
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
    
    testCompile 'junit:junit:4.12'
}

// Renaming Dummy task
// Run with ./gradlew renameProject -PextensionName="X"
task renameProject() {
  if (project.hasProperty('extensionName')) {
  
	// temporary dir for modification (needed for Win OS based on current gradle implementation)
	def tmpDir = 'tmp'
	
	// default src dir
	def srcDir = 'src'
	
	// default base dir
	def baseDir = '.'
	
	// Rename dummy package and replace dummy string import declarations
    def newExtensionName = project.property('extensionName')
    def javaSrcDir = srcDir + '/main/java/net/explorviz/extension/'
	
	println("Trying to rename backend extension from dummy to: " + newExtensionName)
	
	// initial setup
	// copy src folder to tmp dir for modification
	copy {	
		from srcDir
		into tmpDir + '/' + srcDir
	}
		
	// delete old src folder
	delete srcDir
		
	// Rename dummy package and replace dummy string import declarations
	copy {
		from tmpDir + '/' + javaSrcDir + 'dummy'
		filter{it.replaceAll("\\.dummy\\.", "\\." + newExtensionName + "\\.")}
		into javaSrcDir + newExtensionName
	}
		
	// Replace dummy string in .project
    String file = new File(".project").getText("UTF-8")
    file = file.replaceAll("-dummy", "-" + newExtensionName)
    new File(tmpDir + '/' + ".project").write(file, "UTF-8")
	
	// Replace dummy string in settings.gradle
    file = new File("settings.gradle").getText("UTF-8")
    file = file.replaceAll("-dummy", "-" + newExtensionName)
    new File(tmpDir + '/' + "settings.gradle").write(file, "UTF-8")
	
	// java src files 
	copy {	
		from tmpDir + '/' + srcDir
		into srcDir
	}
		
	// .project + settings.gradle
	copy {	
		from tmpDir
		into baseDir
		include '.project'
		include 'settings.gradle'
	}
		
	//cleanup
	delete javaSrcDir + '/dummy'
	delete tmpDir
		
	println("Backend extension renamed to: " + newExtensionName)
  }
}